import { Request, Response } from "express";
import { BaseResponse } from "../DTOS/baseResponse.dto";
import { MessageResponse } from "../DTOS/messageResponse.dto";
import { UserDto } from "../DTOS/users/user.dto";
import { CurrentUserLogin, UpdateAnyUserInputModel, UpdateUserInputModel } from "../swagger/schemas/user.schema";
export declare function getCurrentUserHandler(req: Request, res: Response<BaseResponse<CurrentUserLogin | MessageResponse>>): Promise<Response<BaseResponse<MessageResponse | CurrentUserLogin>, Record<string, any>>>;
export declare const getUsersHandler: (req: Request, res: Response<BaseResponse<UserDto[] | MessageResponse>>) => Promise<Response<BaseResponse<MessageResponse | UserDto[]>, Record<string, any>>>;
export declare function getFullCurrentUser(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;
export declare function getFullUserHandler(req: Request, res: Response<BaseResponse<UserDto | MessageResponse>>): Promise<Response<BaseResponse<UserDto | MessageResponse>, Record<string, any>>>;
export declare function updateUserHandler(req: Request<{}, {}, UpdateUserInputModel>, res: Response<BaseResponse<UserDto | MessageResponse>>): Promise<Response<BaseResponse<UserDto | MessageResponse>, Record<string, any>>>;
export declare function updateAnyUserHandler(req: Request<{}, {}, UpdateAnyUserInputModel>, res: Response<BaseResponse<UserDto | MessageResponse>>): Promise<Response<BaseResponse<UserDto | MessageResponse>, Record<string, any>>>;
